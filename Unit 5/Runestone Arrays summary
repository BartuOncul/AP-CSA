Unit 6: Arrays (Summary)

1. Introduction to Arrays
- Definition: An array is a data structure that stores a fixed-size collection of elements of the same type.
- Syntax for Declaration and Initialization:
  int[] numbers = new int[5];  // Declares an integer array with 5 elements
  int[] scores = {95, 87, 76, 88, 92}; // Declares and initializes
- Key Characteristics:
  - Fixed size: Once created, the size of the array cannot change.
  - Zero-based indexing: Array indices start at 0 and end at length - 1.

2. Accessing Array Elements
- Access elements using their index:
  int first = numbers[0];  // Access the first element
  numbers[2] = 45;         // Assign a value to the third element
- Common Errors:
  - ArrayIndexOutOfBoundsException: Accessing an index outside the valid range (0 to length - 1).

3. Array Length
- Access the size of an array using .length (note: itâ€™s a field, not a method):
  System.out.println(numbers.length);  // Outputs the number of elements

4. Traversing Arrays
- Using Loops:
  - For Loop:
    for (int i = 0; i < numbers.length; i++) {
        System.out.println(numbers[i]);
    }
  - Enhanced For Loop:
    for (int num : numbers) {
        System.out.println(num);
    }
    - Can only be used when you don't need the index.

5. Array Manipulations
- Common Operations:
  - Find the Maximum/Minimum:
    int max = numbers[0];
    for (int i = 1; i < numbers.length; i++) {
        if (numbers[i] > max) {
            max = numbers[i];
        }
    }
  - Sum and Average:
    int sum = 0;
    for (int num : numbers) {
        sum += num;
    }
    double average = (double) sum / numbers.length;
  - Linear Search:
    int target = 45;
    boolean found = false;
    for (int num : numbers) {
        if (num == target) {
            found = true;
            break;
        }
    }
  - Reversing an Array:
    for (int i = 0; i < numbers.length / 2; i++) {
        int temp = numbers[i];
        numbers[i] = numbers[numbers.length - 1 - i];
        numbers[numbers.length - 1 - i] = temp;
    }

-------------------------------------
6. Two-Dimensional Arrays
- Definition: A two-dimensional array is an array of arrays, often used to represent matrices or tables.
- Declaration and Initialization:
  int[][] matrix = new int[3][4];  // 3 rows, 4 columns
  int[][] table = {
      {1, 2, 3},
      {4, 5, 6},
      {7, 8, 9}
  };
- Accessing Elements:
  int element = matrix[1][2];  
  matrix[0][0] = 10;           
- Traversing with Loops:
  for (int i = 0; i < matrix.length; i++) {           // Row loop
      for (int j = 0; j < matrix[i].length; j++) {    // Column loop
          System.out.println(matrix[i][j]);
      }
  }

7. Common Array Problems
- Shifting Elements:
  - Shift all elements to the left or right.
  - Example:
    for (int i = 1; i < numbers.length; i++) {
        numbers[i - 1] = numbers[i];
    }
- Resizing an Array (Using a New Array):
  - Since arrays are fixed-size, create a new larger array and copy elements.
    int[] newArray = new int[numbers.length + 1];
    for (int i = 0; i < numbers.length; i++) {
        newArray[i] = numbers[i];
    }

------------------------------------------------
8. Arrays vs. ArrayLists
- Arrays:
  - Fixed size.
  - Suitable for primitive types and performance-critical tasks.
- ArrayLists:
  - Dynamic size.
  - Part of the java.util package.
  - Only works with objects, not primitives.


Code Example of Arrays
------------

import java.util.Scanner;
public class ArrayGame
{
    Scanner input = new Scanner(System.in);

    private int max =Integer.MIN_VALUE;
    private int min = Integer.MAX_VALUE;
    private int total = 0;
    private int[] myArray = new int[6];

    public void arrayCreator()
    {
        
        System.out.println("Enter your numbers");
        

        for(int i=0; i<myArray.length; i++)
        {
            System.out.println("Enter your number " + (i+1));
            myArray[i] = input.nextInt();
        }
    }

    public int findMax()
    {
        for(int i=0; i<myArray.length; i++)
        {
            if(myArray[i]>max)
            {
                max = myArray[i];
            }
        }
        return max;
    }

    public int findMin()
    {
        for(int j=0; j< myArray.length; j++)
        {
            if(myArray[j]<min)
            {
                min = myArray[j];
            }
        }
        return min;
    }
    
    public int findTotal()
    {
        for(int a=0; a<myArray.length; a++)
        {
            total+=myArray[a];
        }
        return total;
    }
    


    public static void main(String[]args)
    {
        
        ArrayGame array1 = new ArrayGame();

        array1.arrayCreator();


        System.out.println("In your array max number is " + array1.findMax());
        System.out.println("In your array min number is " + array1.findMin());
        System.out.println("In your array the total number is " + array1.findTotal());
        
        array1.input.close();
    }
    
    

}
