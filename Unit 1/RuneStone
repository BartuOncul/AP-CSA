## String Literal

String literal is enclosed in double quotes
A string literal in Java is an exact sequence of charaters (letters, numbers and symbols) which are enclosed in two quotation marks.

**For example)** "ABC123#Â£" or "1234567"

## Syntax/Complier Eror

These  erors occur when the code is wrongly typed. (Yazmada hata olursa Syntax/Complier Eror olur.)


## Logic Eror

Example) The programmer accidently uses a minus(-) instead of plus (+) when finding the sum of the numbers.

* A type is set of values (a domain) and a set of operations on them.
* Data type can be categorized as either primitive or referance. (non primitive)
* The primitive data types used in this course define the set of opertaions for numbers and boolean values.

## Exception

The program attempts to divide a number by 0.

## Logic Eror

Example) The programmer accidently uses a minus(-) instead of plus (+) when finding the sum of the numbers.

* A type is set of values (a domain) and a set of operations on them.
* Data type can be categorized as either primitive or referance. (non primitive)
* The primitive data types used in this course define the set of opertaions for numbers and boolean values.

## Primitive Data

boolean ---> True or False

int ----> 2,8,10,20

double ----> 2.5, 8.12, 11.7

Primitive data types are generally part of the Java. Except for String, non-primitive types are generally created by the programmer.
Non-primitive types can use mathods to perform actions, but primitive types can not.

## What is a Variable?

A variable is a name given to a memory location that is holding a specified type of value.

gpa --> 3.8

numberOftACOS --> 12

ISwINDY ---> True


## Naming a Variable
* May consist of letters, digits or an underscore.
* May not start with a digit.
* Spaces are not allowed.
* May not use any other vharaters such as @ or $.
May not use Java reserv words such as *public, static.*

** Final is a important point as well.


## Literal vs String Literal

**Literal** ---> The source of code representation of a fixed value ---> 3

**String Literal** ---->Enclosed in double quotes. ---> "3"

`System.out.println(3)` --> 3

`System.out.println("3")` --> 3

`System.out.println("3" + "3")` --> 33

`System.out.println(3 + 3)` --> 6


double + int ---> double

double - int ---> double

double * int ---> double

double / int ---> double

double % int ---> double

`System.out.println(17 / 5);` ---> 3
`System.out.println(17 % 5);` ---> 2

`System.out.println(17.0 + 5);` ---> 22.0
`System.out.println(17.0 - 5);` ---> 12.0
`System.out.println(17.0 * 5);` ---> 85.0
`System.out.println(17.0 % 5);` ---> 2.0
`System.out.println(17.0 / 5);` ---> 3.4


