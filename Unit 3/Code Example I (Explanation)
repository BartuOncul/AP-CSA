if statement`lar, programlarda belirli koşullara göre işlemler yapmak için kullanılır. Bir koşul içerir ve eğer bu koşul dopğruysa statement'ın içerisini çalıştırır. 

Example
--------
  
int small = 10;
if (small == 10) 
{
  System.out println("Yay, it's equal!");
｝
if (small == 9) 
{
  System.out.println("Small is nine");
｝
System.out.println("End program");

  Not) Burada small = 10 olduğu için ilk if statement'ı doğrudur ve "Yay, it's equal!" print edilir. İkinci if statement yanlış odluğu için orası atlanır ve parantezlerin dışında kalan 
    (unbounded) kısım print edilir.
    
Yay, it's equal!
End program

Example
--------

  if (4 * 5 == 20) 
  {
    System.out.println("True");
  }

    Not) Burada 4*5 == 20 ifadesi doğru olduğu için "True" print edilir.

Else-if
-------
  
Not) Else-if yapısı, birden fazla durumu kontrol etmemiz gerektiğinde kullanılır. İlk if ifadesi yanlış olduğunda, alternatif koşulları kontrol etmek için else-if blokları kullanılır. 
Bu yapı, bir dizi koşuldan sadece birinin doğru olması durumunda belirli bir işlemi gerçekleştirmemize olanak tanır. 
          
Eğer bir koşul doğruysa, diğer else-if blokları atlanır.
  

Süslü parantez kullanımı
------------------------
  
If yapısında tek bir satır kullanıyorsanız süslü parantezler kullanılmayabilir. Ancak, bu satırın altına yeni bir satır eklemek istediğinizde süslü parantezleri unutmak beklenmedik 
hatalara yol açabilir.


Truth tables
-----------

System.out.println(true && true); // Outputs: true 

System.out.println(true && false); // Outputs: false


System.out.println(true || false); // Outputs: true
System.out.println(false || false); // Outputs: false


int x = 15;
if x <= 20 && x >=10) 
{
  System.out.println("x is between 10 and 20");
}

Not) Iki if statement da doğru olduğu için kod çalışır
  

int x = 25;
if (x > 20 || x < 10) 
{
  System.out.println("x is outside the range of 10 and 20");
}

Not) Biri true, biri false olsa da aralarında "or" işareti olduğu için çalışır.


int x = 0;
int y = 10;
if (x != 0 && y / x > 5) 
{
  // This code won't run, and we avoid division by zero.
}


Comparing Primitives vs. Comparing Objects
------------------------------------------


